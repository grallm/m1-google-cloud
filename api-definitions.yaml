openapi: 3.0.3
info:
  title: REST API - App Engine Java Servlet
  version: '1.0'
  x-logo:
    url: ''
  description: "
    Our REST API routes definition our 'Web, Cloud and Datastores' project
    Malo GRALL @grallm
    Guillaume POIGNANT
    Mathis ROCHER"
servers:
  - url: https://api.example.io
paths:
# POSTS
  /post:
    get:
      summary: Get all posts
      tags: ["Post"]
      responses:
        '200':
          description: OK
    post:
      summary: Post a post
      tags: ["Post"]
      security:
        - Auth: []
      requestBody:
        $ref: '#/components/requestBodies/Post'
      responses:
        '200':
          description: OK

  # Specific post
  /post/{postId}:
    get:
      summary: Get specific Post
      tags: ["Post"]
      parameters:
      - name: "postId"
        in: "path"
        required: true
        schema:
          type: string
      security:
        - {} # Optional Auth
        - Auth: []
      responses:
        '200':
          description: "
            - Post data : creator (name, profile image), image, description, number likes, date

            - Auth : if liked"

  # Like/Unlike a post
  /post/{postId}/like:
    post:
      summary: Like/Unlike a post
      tags: ["Post"]
      parameters:
      - name: "postId"
        in: "path"
        required: true
        schema:
          type: string
      security:
        - Auth: []
      responses:
        '200':
          description: OK

# USERS
  /user:
    get:
      summary: Get all Users
      tags: ["User"]
      responses:
        '200':
          description: OK

  /user/{userId}:
    get:
      summary: Get specific User
      tags: ["User"]
      parameters:
      - name: "userId"
        in: "path"
        required: true
        schema:
          type: string
      security:
        - {}
        - Auth: []
      responses:
        '200':
          description: "
            - User data : name, followers, number posts

            - Auth : if follow"

  # Follow/Unfollow an User
  /user/{userId}/follow:
    post:
      summary: Follow/Unfollow an User
      tags: ["User"]
      parameters:
      - name: "userId"
        in: "path"
        required: true
        schema:
          type: string
      security:
        - Auth: []
      responses:
        '200':
          description: OK

  # User's posts
  /user/{userId}/posts:
    get:
      summary: Get posts of a User
      tags: ["User"]
      parameters:
      - name: "userId"
        in: "path"
        required: true
        schema:
          type: string
      security:
        - {}
        - Auth: []
      responses:
        '200':
          description: "
            - All posts, same data than `/post/{postId}`

            - Auth : if liked"

  # Get following
  /user/{userId}/following:
    get:
      summary: Get all followed account from User
      tags: ["User"]
      parameters:
      - name: "userId"
        in: "path"
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK

# TIMELINE
  /timeline:
    get:
      summary: "Get timeline of posts for home page"
      security:
        - {}
        - Auth: []
      responses:
        '200':
          description: "
            - 10 last posts

            - Auth : 10 last posts from followers"

tags:
  - name: Post
    description: Everything linked to "TinyGram" posts
  - name: User
    description: Everything linked to "TinyGram" users

components:
  securitySchemes:
    Auth:
      type: http
      scheme: basic
  schemas:
    Post:
      properties:
        image:
          type: string
        description:
          type: string
  requestBodies:
    Post:
      description: A JSON object containing pet information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Post'